<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--  spring 对 bean 的管理细节
            1.创建 bean 的三种方式
            2.bean 对象的作用范围
            3.bean 对象的生命周期
      -->

    <!--  创建 bean 的三种方式  -->

    <!--  第一种方式，使用默认构造函数创建，
            在spring配置文件中使用 bean 标签，配以 id 和 class 属性后，且没有其他属性和标签时
            采用默认构造函数创建，如果没有默认构造函数，则无法创建
    <bean id="accountService" class="com.com.joush.service.impl.AccountServiceImpl"></bean> -->

    <!--  第二种方式，使用普通工厂中的方法创建对象
            使用某个类中的方法创建对象，并存入 spring 容器

    <bean id="instanceFactory" class="com.com.joush.factory.InstanceFactory"></bean>
    <bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"></bean> -->

    <!-- 第三种方式，使用工厂中的静态方法创建对象
            使用某个类中的静态方法创建对象并存人 spring 容器
    <bean id="accountService" class="com.com.joush.factory.StaticFactory" factory-method="getAccountService"></bean> -->

    <!-- bean 对象的作用范围
        bean 标签的 scope 属性
        作用，用于指定 bean 对象的作用范围
        取值，常用前两个
            singleton, 单例，默认值
            prototype, 多例
            request, 作用于 web 应用的请求范围
            session, 作用于 web 应用的会话范围
            global-session, 作用于集群环境的绘画范围（全局回话范围），当不是集群环境时，就是 session

    <bean id="accountService" class="com.com.joush.service.impl.AccountServiceImpl" scope="singleton"></bean> -->

    <!-- bean 对象的生命周期
            单例对象
                出生，容器创建时出生
                存活，容器还在，对象一直存活
                死亡，容器销毁，对象消亡
            多例对象
                出生，使用对象时，spring 创建
                存活，对象的使用过程中，一直存活
                死亡，当对象长时间不用，且没有别的对象引用时，由 Java 的垃圾回收器回收
      -->
    <bean id="accountService" class="com.com.joush.service.impl.AccountServiceImpl" scope="prototype" init-method="init" destroy-method="destroy"></bean>
</beans>